name: build

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

env:
  OMP_PROC_BIND: false

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run clang-format
      run: |
        git ls-files '*.hpp' '*.cpp' | xargs clang-format -i
        git diff --exit-code

  build-linux-gpu:
    strategy:
      matrix:
        cxx: [g++-9]
      fail-fast: false
    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:11.6.2-devel-ubuntu20.04
    steps:
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y cmake git libhdf5-dev
      env:
        DEBIAN_FRONTEND: noninteractive
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build kEDM
      run: |
        mkdir build
        cd build
        cmake \
          -DCMAKE_BUILD_TYPE=Debug \
          -DKEDM_ENABLE_GPU=ON \
          -DKEDM_ENABLE_TESTS=OFF \
          -DKokkos_ARCH_VOLTA70=ON ..
        make -j $(nproc)
      env:
        NVCC_WRAPPER_DEFAULT_COMPILER: ${{ matrix.cxx }}

  build-linux-cpu:
    strategy:
      matrix:
        cxx: [clang++-11, g++-10]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libhdf5-dev libopenblas-openmp-dev liblapacke-dev libomp-11-dev
    - name: Build kEDM
      run: |
        mkdir build
        cd build
        cmake \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
          -DKEDM_ENABLE_CPU=ON \
          ..
        make -j $(nproc)
    - name: Run kEDM unit tests
      run: ctest
      working-directory: build

  build-macos-cpu:
    strategy:
      matrix:
        cxx: [clang++, g++-10]
      fail-fast: false
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install libomp
      if: matrix.cxx == 'clang++'
      run: |
        brew install libomp
    - name: Install HDF5
      run: brew install hdf5
    - name: Build kEDM
      run: |
        mkdir build
        cd build
        cmake \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
          -DCMAKE_CXX_FLAGS="-I/usr/local/include" \
          -DCMAKE_EXE_LINKER_FLAGS="-L/usr/local/lib" \
          -DCMAKE_SHARED_LINKER_FLAGS="-L/usr/local/lib" \
          -DKEDM_ENABLE_CPU=ON \
          ..
        make -j $(sysctl -n hw.physicalcpu_max)
    - name: Run kEDM unit tests
      run: ctest
      working-directory: build

  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.4.0
        env:
          CIBW_BUILD: cp3*-manylinux_x86_64 cp3*-macosx_x86_64
          CIBW_BEFORE_ALL_LINUX: "yum install -y openblas-devel && ln -sf /usr/lib64/libopenblaso.so /usr/lib64/libopenblas.so"
          CIBW_ENVIRONMENT_MACOS: "CXX=g++-10"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest {project}/python
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  publish-wheels:
    needs: [build-wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
